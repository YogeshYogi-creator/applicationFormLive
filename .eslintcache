[{"D:\\web\\react-2\\react-routing\\application-form\\src\\index.js":"1","D:\\web\\react-2\\react-routing\\application-form\\src\\App.js":"2","D:\\web\\react-2\\react-routing\\application-form\\src\\Form.js":"3","D:\\web\\react-2\\react-routing\\application-form\\src\\AdminDashBoard.js":"4","D:\\web\\react-2\\react-routing\\application-form\\src\\Table.js":"5"},{"size":234,"mtime":1611929162694,"results":"6","hashOfConfig":"7"},{"size":571,"mtime":1611751873658,"results":"8","hashOfConfig":"7"},{"size":4408,"mtime":1614568946682,"results":"9","hashOfConfig":"7"},{"size":2536,"mtime":1611751641687,"results":"10","hashOfConfig":"7"},{"size":3826,"mtime":1614568943577,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cuyxqi",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web\\react-2\\react-routing\\application-form\\src\\index.js",[],["24","25"],"D:\\web\\react-2\\react-routing\\application-form\\src\\App.js",[],"D:\\web\\react-2\\react-routing\\application-form\\src\\Form.js",[],"D:\\web\\react-2\\react-routing\\application-form\\src\\AdminDashBoard.js",["26","27","28","29"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nimport Table from './Table'\r\nconst AdminDashBoard = (props) => {\r\nconst [users, setUsers] = useState([])\r\nconst [names, setNames] = useState([])\r\nuseEffect(()=>{\r\n    axios.get('http://dct-application-form.herokuapp.com/users/application-forms')\r\n    .then((response)=>{\r\n        const result = response.data\r\n        setUsers(result)\r\n    })\r\n    .catch((err)=>{\r\n        alert(err.message)\r\n    })\r\n},[])\r\n\r\nconst frontEndClick = () => {\r\n    const filterFront = users.filter((students=>{\r\n        if(students.jobTitle === 'Front-End Developer'){\r\n            return <li>{students.name}</li>\r\n        }\r\n    }))\r\nsetNames(filterFront)\r\n}\r\n\r\nconst nodeClick = () => {\r\n    const filterFront = users.filter((students=>{\r\n        if(students.jobTitle === 'Node.js Developer'){\r\n            return <li>{students.name}</li>\r\n        }\r\n    }))\r\nsetNames(filterFront)\r\n}\r\n\r\nconst meanClick = () => {\r\n    const filterFront = users.filter((students=>{\r\n        if(students.jobTitle === 'MEAN Stack Developer'){\r\n            return <li>{students.name}</li>\r\n        }\r\n    }))\r\nsetNames(filterFront)\r\n}\r\n\r\nconst fullStackClick = () => {\r\n    const filterFront = users.filter((students=>{\r\n        if(students.jobTitle === 'FULL Stack Developer'){\r\n            return <li>{students.name}</li>\r\n        }\r\n    }))\r\nsetNames(filterFront)\r\n}\r\n\r\nconst editStatus = (user) => {\r\n    const result = names.map(students=>{\r\n        if(students._id === user.id){\r\n            return {...students, ...user} // we are updating students object with the user object which contains status of the student\r\n        }else{\r\n            return {...students}\r\n        }\r\n    })\r\n    setNames(result)\r\n}\r\n\r\n    return (\r\n        <div className = \"mt-3\">\r\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick = {frontEndClick}>Front-End Developer</button>\r\n            <button type=\"button\" style = {{marginLeft : \"6px\"}} className=\"btn btn-outline-success\" onClick = {nodeClick}>Node.js Developer</button>\r\n            <button type=\"button\" style = {{marginLeft : \"6px\"}} className=\"btn btn-outline-danger\" onClick = {meanClick}>MEAN Stack Developer</button>\r\n            <button type=\"button\" style = {{marginLeft : \"6px\"}} className=\"btn btn-outline-dark\" onClick = {fullStackClick}>Full Stack Developer</button>\r\n            {names.length===0 ? '' : <Table names = {names} editStatus = {editStatus}/>}\r\n    </div>\r\n    )\r\n}\r\nexport default AdminDashBoard","D:\\web\\react-2\\react-routing\\application-form\\src\\Table.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":21,"column":47,"nodeType":"36","messageId":"37","endLine":21,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":30,"column":47,"nodeType":"36","messageId":"37","endLine":30,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":39,"column":47,"nodeType":"36","messageId":"37","endLine":39,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":48,"column":47,"nodeType":"36","messageId":"37","endLine":48,"endColumn":49},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]